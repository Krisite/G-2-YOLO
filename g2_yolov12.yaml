# YOLOv12 ðŸš€, AGPL-3.0 license
# YOLOv12 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect
# CFG file for YOLOv12-turbo

# Parameters
nc: 18 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov12n.yaml' will call yolov12.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 497 layers, 2,553,904 parameters, 2,553,888 gradients, 6.2 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 497 layers, 9,127,424 parameters, 9,127,408 gradients, 19.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 533 layers, 19,670,784 parameters, 19,670,768 gradients, 60.4 GFLOPs
  l: [1.00, 1.00, 512] # summary: 895 layers, 26,506,496 parameters, 26,506,480 gradients, 83.3 GFLOPs
  x: [1.00, 1.50, 512] # summary: 895 layers, 59,414,176 parameters, 59,414,160 gradients, 185.9 GFLOPs


# GÂ²-YOLOv12-m Backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv,  [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv,  [128, 3, 2, 1, 2]] # 1-P2/4
  - [-1, 1, GDS_M, [256]] # 2 (Replaced C3k2 with GDS_M) -> P2 feature from here
  - [-1, 1, Conv,  [256, 3, 2, 1, 4]] # 3-P3/8
  - [-1, 1, GDS_M, [512]] # 4 (Replaced C3k2 with GDS_M) -> P3 feature from here
  - [-1, 1, Conv,  [512, 3, 2]] # 5-P4/16
  - [-1, 4, A2C2f, [512, True, 4]] # 6 -> P4 feature from here
  - [-1, 1, Conv,  [1024, 3, 2]] # 7-P5/32
  - [-1, 4, A2C2f, [1024, True, 1]] # 8 -> P5 feature from here

# GÂ²-YOLOv12-m Head (with P2-P5 outputs and HGAN/SAG)
head:
  # Top-down path
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 9
  - [[-1, 6], 1, SAG, []] # 10 (HGAN Integration)
  - [[-1, 6], 1, Concat, [1]] # 11 (cat backbone P4)
  - [-1, 2, A2C2f, [512, False, -1]] # 12 (P4_td)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 13
  - [[-1, 4], 1, SAG, []] # 14 (HGAN Integration)
  - [[-1, 4], 1, Concat, [1]] # 15 (cat backbone P3)
  - [-1, 2, A2C2f, [256, False, -1]] # 16 (P3_td)

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]] # 17 (NEW: Upsample for P2)
  - [[-1, 2], 1, SAG, []] # 18 (NEW: HGAN for P2)
  - [[-1, 2], 1, Concat, [1]] # 19 (NEW: cat backbone P2)
  - [-1, 2, A2C2f, [128, False, -1]] # 20 (P2_out) -> DETECT HEAD 1 (P2/4)

  # Bottom-up path
  - [-1, 1, Conv, [128, 3, 2]] # 21 (Downsample P2_out)
  - [[-1, 16], 1, Concat, [1]] # 22 (cat P3_td)
  - [-1, 2, A2C2f, [256, False, -1]] # 23 -> DETECT HEAD 2 (P3/8)

  - [-1, 1, Conv, [256, 3, 2]] # 24 (Downsample P3_out)
  - [[-1, 12], 1, Concat, [1]] # 25 (cat P4_td)
  - [-1, 2, A2C2f, [512, False, -1]] # 26 -> DETECT HEAD 3 (P4/16)

  - [-1, 1, Conv, [512, 3, 2]] # 27 (Downsample P4_out)
  - [[-1, 8], 1, Concat, [1]] # 28 (cat backbone P5)
  - [-1, 2, C3k2, [1024, True]] # 29 -> DETECT HEAD 4 (P5/32)

  - [[20, 23, 26, 29], 1, Detect, [nc]] # Detect(P2, P3, P4, P5)
